<Application x:Class="BP.Plankton.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters1="clr-namespace:BP.Plankton.Converters"
             Startup="Application_Startup" ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <RoutedUICommand x:Key="RegenerateCommand" Text="Regenerate"/>
        <RoutedUICommand x:Key="RandomCommand" Text="Random"/>
        <RoutedUICommand x:Key="TogglePreviewCommand" Text="Toggle Preview"/>
        <RoutedUICommand x:Key="QuickIncreasePlanktonCommand" Text="IncreasePlankton"/>
        <RoutedUICommand x:Key="QuickDecreasePlanktonCommand" Text="DecreasePlankton"/>
        <RoutedUICommand x:Key="PopChildBubblesCommand" Text="Pop Bubbles"/>
        <RoutedUICommand x:Key="ToggleAttractionCommand" Text="Toggle Attraction"/>
        <RoutedUICommand x:Key="ToggleChildBubblesCommand" Text="Toggle Child Bubbles"/>
        <RoutedUICommand x:Key="SaveCommand" Text="Save"/>
        <RoutedUICommand x:Key="LoadCommand" Text="Load"/>
        <RoutedUICommand x:Key="DefaultOptionsCommand" Text="Default Options"/>
        <RoutedUICommand x:Key="DefaultZoomCommand" Text="Default Zoom"/>
        <RoutedUICommand x:Key="FullScreenCommand" Text="Full Screen Mode"/>
        <RoutedUICommand x:Key="ExitFullScreenCommand" Text="Exit Full Screen Mode"/>
        <RoutedUICommand x:Key="GenerateGeometryCommand" Text="Generate Geometry"/>
        <RoutedUICommand x:Key="GenerateGeometryFromStringCommand" Text="Generate Geometry From String"/>
        <RoutedUICommand x:Key="GenerateGeometryRealtimeCommand" Text="Generate Geometry Realtime"/>
        <RoutedUICommand x:Key="ImportPlanktonBrushFromImageFileCommand" Text="Import Plankton Brush From Image File"/>
        <RoutedUICommand x:Key="ImportBackgroundBrushFromImageFileCommand" Text="Import Background Brush From Image File"/>
        <RoutedUICommand x:Key="ImportSeaBedBrushFromImageFileCommand" Text="Import Sea Bed Brush From Image File"/>
        <RoutedUICommand x:Key="GenerateSeaBedTextureCommand" Text="Generate Sea Bed Texture"/>
        <RoutedUICommand x:Key="ApplyQuickSettingCommand" Text="Apply Quick Setting"/>
        <RoutedUICommand x:Key="ToggleCurrentCommand" Text="Toggle Current"/>
        <RoutedUICommand x:Key="TriggerCurrentCommand" Text="Trigger Current"/>
        <RoutedUICommand x:Key="ChangeZoomPreviewLocatorModeCommand" Text="Change Zoom Preview Locator Mode"/>
        <RoutedUICommand x:Key="ChangeCurrentModeCommand" Text="Change Current Mode"/>
        <RoutedUICommand x:Key="ToggleCurrentIndicatorCommand" Text="Toggle Current Indicator"/>
        <RoutedUICommand x:Key="GenerateNewRandomColourPlanktonCommand" Text="Generate New Random Colour Plankton"/>
        <RoutedUICommand x:Key="GenerateNewRandomColourBackgroundCommand" Text="Generate New Random Colour Background"/>
        <RoutedUICommand x:Key="GenerateNewRandomColourSeaBedCommand" Text="Generate New Random Colour Sea Bed"/>
        <RoutedUICommand x:Key="BreakoutOptionsToExternalWindowCommand" Text="Break Out OptionsTo External Window"/>
        <converters1:BooleanToVisibiltyConverter x:Key="booleanToVisibilityConverter"/>
        <converters1:BooleanToVisibiltyCollapsedConverter x:Key="booleanToVisibilityCollapsedConverter"/>
        <converters1:BooleanInverterConverter x:Key="booleanInverterConverter"/>
        <SolidColorBrush x:Key="controlEnabledForegroundBrush" Color="White"/>
        <SolidColorBrush x:Key="controlDisabledForegroundBrush" Color="Gray"/>
        <Style x:Key="buttonBaseStyle" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Opacity" Value="0.75"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1.0"/>
                    <Setter Property="Foreground" Value="LightSteelBlue"/>
                    <Setter Property="BorderBrush" Value="LightSteelBlue"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="BorderBrush" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource buttonBaseStyle}"/>
        <Style x:Key="checkBoxBaseStyle" TargetType="CheckBox">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                            <BulletDecorator.Bullet>
                                <Border Width="Auto" Height="Auto" MinHeight="20" MinWidth="20" CornerRadius="1" BorderThickness="1.5" VerticalAlignment="Center">
                                    <Path Name="check" Width="7" Height="7" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=CheckBox}, Path=IsChecked, Converter={StaticResource booleanToVisibilityConverter}}">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Stroke" Value="{StaticResource controlEnabledForegroundBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Stroke" Value="{StaticResource controlDisabledForegroundBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="Black"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource controlEnabledForegroundBrush}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="BorderBrush" Value="{StaticResource controlDisabledForegroundBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="radioButtonBaseStyle" TargetType="RadioButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid>
                                    <Ellipse Width="Auto" Height="Auto" MinHeight="20" MinWidth="20" StrokeThickness="1.5" >
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Fill" Value="Black"/>
                                                <Setter Property="Stroke" Value="{StaticResource controlEnabledForegroundBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Stroke" Value="{StaticResource controlDisabledForegroundBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                    <Path Name="check" Width="7" Height="7" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RadioButton}, Path=IsChecked, Converter={StaticResource booleanToVisibilityConverter}}">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Stroke" Value="{StaticResource controlEnabledForegroundBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Stroke" Value="{StaticResource controlDisabledForegroundBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="sliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" BorderBrush="Transparent" Opacity="1.0" OverridesDefaultStyle="True" SnapsToDevicePixels="True">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Height" Value="4"/>
                                        <Setter Property="CornerRadius" Value="1"/>
                                        <Setter Property="Margin" Value="1"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="BorderBrush" Value="Black"/>
                                        <Setter Property="Background" Value="White"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="BorderBrush" Value="Gray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="sliderBaseStyle" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" OverridesDefaultStyle="True" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" Value="{TemplateBinding Value}">
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource sliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource sliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Ellipse>
                                                        <Ellipse.Style>
                                                            <Style TargetType="Ellipse">
                                                                <Setter Property="Width" Value="15"/>
                                                                <Setter Property="Height" Value="15"/>
                                                                <Setter Property="Opacity" Value="1.0"/>
                                                                <Setter Property="Stroke" Value="Black"/>
                                                                <Setter Property="StrokeThickness" Value="1"/>
                                                                <Setter Property="Fill">
                                                                    <Setter.Value>
                                                                        <RadialGradientBrush>
                                                                            <RadialGradientBrush.GradientStops>
                                                                                <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Slider}}, Path=Foreground.Color}" Offset="1"/>
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                            </RadialGradientBrush.GradientStops>
                                                                        </RadialGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Fill" Value="LightGray"/>
                                                                        <Setter Property="Stroke" Value="Gray"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Ellipse.Style>
                                                    </Ellipse>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <TickBar TickFrequency="{TemplateBinding TickFrequency}" SelectionStart="{TemplateBinding Minimum}" SelectionEnd="{TemplateBinding Maximum}" Grid.Row="1" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}">
                                    <TickBar.Style>
                                        <Style TargetType="TickBar">
                                            <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Slider}}, Path=Foreground}"/>
                                            <Setter Property="Height" Value="5"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Placement" Value="Bottom"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" Value="LightGray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TickBar.Style>
                                </TickBar>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="tabItemBaseStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1.5,2,1.5,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="border" Height="30" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1.5,1.5,0,0" VerticalAlignment="Bottom">
                            <Label Name="presenter" Opacity="0.75" Content="{TemplateBinding TabItem.Header}" Background="Transparent" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabItem.IsSelected" Value="True">
                                <Setter TargetName="border" Property="Height" Value="33"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5,2.5,1.5,1"/>
                                <Setter TargetName="presenter" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="TabItem.IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Height" Value="30"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
